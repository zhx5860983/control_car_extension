{"entries":[{"timestamp":1728036696462,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"=)kC]k-7J-On%iN@)N7j\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"gOu,#uz%wWX`y|=*~7Gw\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"microphone"],[1,"radio"],[0,"\": \""]],"start1":110,"start2":110,"length1":18,"length2":13},{"diffs":[[0,"   \""],[-1,"bluetooth\": \"*\",\n        \"wuKong"],[1,"microphone"],[0,"\": \""],[-1,"github:elecfreaks/pxt-wukong#v1.5.6"],[1,"*"],[0,"\"\n  "]],"start1":132,"start2":132,"length1":79,"length2":23},{"diffs":[[0,".md\""],[-1,",\n        \"custom.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":232,"start2":232,"length1":110,"length2":44}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"custom.ts","value":"\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"ïƒƒ\"\nnamespace ControlCar {\n\n    let straight_pressed = 0\n\n    let velo_r_target = 0.0\n    let velo_l_target = 0.0\n    let velo_multiplier_r = 1.0\n    let velo_multiplier_l = 1.0\n    let full_speed = 0.0\n    let speed_limit = 100.0\n\n    let pure_rotation_rate = 0.3\n    let mixed_rotation_rate = 0.2\n\n\n    let dt = 0.0\n    let time_current = 0.0\n    let time_last = 0.0\n    let velo_r = 0.0\n    let velo_l = 0.0\n    let acceleration_time = 50\n    let inv_acceleration_time = 1.0 / acceleration_time\n\n    /**\n     * TODO: describe your function here\n     * @param speed_limit_ is the highest rotational speed of motors\n     * @param pure_rotation_rate_ is the speed of motors (as a rate of highest speed) used for pure rotation\n     * @param mixed_rotation_rate_ is the speed of motors (as a rate of highest speed) used for mixed rotation\n     * @param is_reverse_motor_setup_ is 1, when motor1 and motor2 corresponse to wheel_right and wheel_left, otherwise 0\n     */\n    //% block\n    export function car_direct_speed(speed_limit_: number, pure_rotation_rate_: number, mixed_rotation_rate_: number, is_reverse_motor_setup_: boolean): void {\n\n        speed_limit = speed_limit_\n        pure_rotation_rate = pure_rotation_rate_\n        mixed_rotation_rate = mixed_rotation_rate_\n\n        bluetooth.startButtonService()\n        bluetooth.startLEDService()\n\n        // ---------- control panel setup --------------\n        function set_target_velo() {\n            velo_l_target = full_speed * velo_multiplier_l\n            velo_r_target = full_speed * velo_multiplier_r\n        }\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_1_DOWN, function () {\n            straight_pressed = 1\n            full_speed = speed_limit\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_1_UP, function () {\n            straight_pressed = 0\n            full_speed = 0.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_2_DOWN, function () {\n            straight_pressed = 1\n            full_speed = - speed_limit\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_2_UP, function () {\n            straight_pressed = 0\n            full_speed = 0.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_3_DOWN, function () {\n            if (straight_pressed) {\n                velo_multiplier_l = mixed_rotation_rate\n            } else {\n                full_speed = speed_limit\n                velo_multiplier_l = -pure_rotation_rate\n                velo_multiplier_r = pure_rotation_rate\n            }\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_3_UP, function () {\n            if (!(straight_pressed)) {\n                full_speed = 0.0\n            }\n            velo_multiplier_l = 1.0\n            velo_multiplier_r = 1.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_4_DOWN, function () {\n            if (straight_pressed) {\n                velo_multiplier_r = mixed_rotation_rate\n            } else {\n                full_speed = speed_limit\n                velo_multiplier_r = -pure_rotation_rate\n                velo_multiplier_l = pure_rotation_rate\n            }\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_4_UP, function () {\n            if (!(straight_pressed)) {\n                full_speed = 0.0\n            }\n            velo_multiplier_l = 1.0\n            velo_multiplier_r = 1.0\n            set_target_velo()\n        })\n        // ---------- control panel setup --------------\n\n        basic.forever(function () {\n            if (is_reverse_motor_setup_)\n                wuKong.setAllMotor(velo_r_target, velo_l_target)\n            else\n                wuKong.setAllMotor(velo_l_target, velo_r_target)\n        })\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param speed_limit_ is the highest rotational speed of motors\n     * @param pure_rotation_rate_ is the speed of motors (as a rate of highest speed) used for pure rotation\n     * @param mixed_rotation_rate_ is the speed of motors (as a rate of highest speed) used for mixed rotation\n     * @param acceleration_time_ is time span (approximately) from current velocity to target velocity withint the servo mechanism\n     * @param is_reverse_motor_setup_ is 1, when motor1 and motor2 corresponse to wheel_right and wheel_left, otherwise 0\n     */\n    //% block\n    export function car_servo_speed(speed_limit_: number, pure_rotation_rate_: number, mixed_rotation_rate_: number,\n        acceleration_time_: number, is_reverse_motor_setup_: boolean): void {\n\n        speed_limit = speed_limit_\n        pure_rotation_rate = pure_rotation_rate_\n        mixed_rotation_rate = mixed_rotation_rate_\n        acceleration_time = acceleration_time_\n        inv_acceleration_time = 1.0 / acceleration_time\n\n        bluetooth.startButtonService()\n        bluetooth.startLEDService()\n\n        // ---------- control panel setup --------------\n        function set_target_velo() {\n            velo_l_target = full_speed * velo_multiplier_l\n            velo_r_target = full_speed * velo_multiplier_r\n        }\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_1_DOWN, function () {\n            straight_pressed = 1\n            full_speed = speed_limit\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_1_UP, function () {\n            straight_pressed = 0\n            full_speed = 0.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_2_DOWN, function () {\n            straight_pressed = 1\n            full_speed = - speed_limit\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_2_UP, function () {\n            straight_pressed = 0\n            full_speed = 0.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_3_DOWN, function () {\n            if (straight_pressed) {\n                velo_multiplier_l = mixed_rotation_rate\n            } else {\n                full_speed = speed_limit\n                velo_multiplier_l = -pure_rotation_rate\n                velo_multiplier_r = pure_rotation_rate\n            }\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_3_UP, function () {\n            if (!(straight_pressed)) {\n                full_speed = 0.0\n            }\n            velo_multiplier_l = 1.0\n            velo_multiplier_r = 1.0\n            set_target_velo()\n        })\n\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_4_DOWN, function () {\n            if (straight_pressed) {\n                velo_multiplier_r = mixed_rotation_rate\n            } else {\n                full_speed = speed_limit\n                velo_multiplier_r = -pure_rotation_rate\n                velo_multiplier_l = pure_rotation_rate\n            }\n            set_target_velo()\n        })\n        control.onEvent(EventBusSource.MES_DPAD_CONTROLLER_ID, EventBusValue.MES_DPAD_BUTTON_4_UP, function () {\n            if (!(straight_pressed)) {\n                full_speed = 0.0\n            }\n            velo_multiplier_l = 1.0\n            velo_multiplier_r = 1.0\n            set_target_velo()\n        })\n        // ---------- control panel setup --------------\n\n        basic.forever(function () {\n            if (Math.abs(time_last) < 1e-5) {\n                time_current = input.runningTime()\n            }\n            time_current = input.runningTime()\n            dt = time_current - time_last\n            time_last = time_current\n\n            velo_l = velo_l + inv_acceleration_time * (velo_l_target - velo_l) * dt\n            velo_r = velo_r + inv_acceleration_time * (velo_r_target - velo_r) * dt\n            if (is_reverse_motor_setup_)\n                wuKong.setAllMotor(velo_r, velo_l)\n            else\n                wuKong.setAllMotor(velo_l, velo_r)\n        })\n    }\n\n    //% block\n    export function reset_car_speed() {\n        straight_pressed = 0\n        velo_l_target = 0.0\n        velo_r_target = 0.0\n        velo_multiplier_l = 1.0\n        velo_multiplier_r = 1.0\n\n        velo_l = 0.0\n        velo_r = 0.0\n        time_current = 0.0\n        dt = 0.0\n        time_last = 0.0\n    }\n\n    //% block\n    export function reset_car() {\n        control.reset()\n    }\n\n}\n\n"}]}],"snapshots":[{"timestamp":1728036696461,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"control_car_extension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1728036759271}